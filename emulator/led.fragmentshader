#version 330 core

uniform vec3 element_color;
uniform float intensity;
uniform vec3 pos;
in vec2 UV;
out vec3 color;

float min_intensity = 1.0 / 255.0;
float max_intensity = 1.0;
float beta = (1.0f - min_intensity) / (0.5*0.5*min_intensity);
vec2 led_color = vec2(200.0 / 360.0, 0.9);
vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);

vec3 hsv2rgb(vec3 c)
{
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main(){
	vec2 a = UV - vec2(0.5, 0.5);
	float dist = sqrt(a.x * a.x + a.y * a.y);
	float att = 1.0 / (1.0 + beta*dist*dist);
	if (att < min_intensity) {
		att = 0.0;
	}
	float i = att * intensity * max_intensity;
	vec3 rgb = vec3(led_color, i);
	color = hsv2rgb(rgb);
}